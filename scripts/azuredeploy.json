{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": { 
        "blobStorageAccountName": 
        {
            "type": "string",
            "defaultValue": "ndc2017photos"
        },
        "blobStorageContainerName": 
        {
            "type": "string",
            "defaultValue": "incomingphotos"
        },
        "emotionApiName": 
        {
            "type": "string",
            "defaultValue": "ndc2017emotionapi"
        },
        "faceApiName": 
        {
            "type": "string",
            "defaultValue": "NDC2017FaceApi"
        },
        "highscoreApiPostEmotionsUri":
        {
            "type": "string",
            "defaultValue": "http://novanet-ndc-highscore.azurewebsites.net/api/emotions"
        },
        "userApiBaseUrl":
        {
            "type": "string",
            "defaultValue": "http://ndc2017.azurewebsites.net"
        },
        "userApiKey":
        {
            "type": "string",
            "defaultValue": "ThisIsSecret"
        },
        "functionAppName":
        {
            "type": "string",
            "defaultValue": "ndc2017emotionapifunction"
        },
        "functionAppServicePlanName":
        {
            "type": "string",
            "defaultValue": "ndc2017consumptplan"
        },
        "functionAppStorageAccountName":
        {
            "type": "string",
            "defaultValue": "ndc2017functionappstorageacc"
        },
        "functionAppSourceCodeRepositoryURL": {
            "type": "string",
            "defaultValue": "https://github.com/novanet/ndc2017.git",
            "metadata": {
                "description": "Source code repository URL"
            }
        },
        "functionAppSourceCodeBranch": {
            "type": "string",
            "defaultValue": "master",
            "metadata": {
                "description": "Source code repository branch"
            }
        },
        "functionAppSourceCodeManualIntegration": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Use 'true' if you are deploying from the base repo. Use 'false' if you are deploying from your own fork. If you use 'false', make sure that you have Administrator rights in the repo. If you get an error, manually add GitHub integration to another web app, to associate a GitHub access token with your Azure subscription."
            }
        }
     },
    "variables": { },
    "resources": 
    [
        {
            "name": "[parameters('blobStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2016-01-01",
            "sku": 
            {
                "name": "Standard_LRS"
            },
            "kind": "BlobStorage",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": 
            {
                // "customDomain": {
                // "name": "string",
                // "useSubDomain": boolean
                // },
                "encryption": 
                {
                    "services": 
                    {
                        "blob": 
                        {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "comments": "Generalized from resource: '/subscriptions/3ff28b41-4657-4e36-886f-9a09539f8f62/resourceGroups/NovanetNdc2017/providers/Microsoft.CognitiveServices/accounts/testingemotions'.",
            "type": "Microsoft.CognitiveServices/accounts",
            "sku": {
                "name": "F0"
            },
            "kind": "Emotion",
            "name": "[parameters('emotionApiName')]",
            "apiVersion": "2016-02-01-preview",
            "location": "westus",
            "properties": {},
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/64aa2c64-0643-46e6-b55f-3e37a345f405/resourceGroups/NDC2017/providers/Microsoft.CognitiveServices/accounts/NDC2017FaceApi'.",
            "type": "Microsoft.CognitiveServices/accounts",
            "sku": {
                "name": "S0"
            },
            "kind": "Face",
            "name": "[parameters('faceApiName')]",
            "apiVersion": "2016-02-01-preview",
            "location": "westeurope",
            "properties": {},
            "dependsOn": []
        },
        // {
        //     "comments": "App Service Plan for the function app - only necessary if always on should be used",
        //     "type": "Microsoft.Web/serverfarms",
        //     "apiVersion": "2015-04-01",
        //     "name": "[Parameters('functionAppServicePlanName')]",
        //     "location": "[resourceGroup().location]",
        //     "tags": {},
        //     "properties": 
        //     {
        //         "name": "[Parameters('functionAppServicePlanName')]",
        //         "sku": "Free",
        //         "workerSize": "0",
        //         "numberOfWorkers": 1
        //     }
        // },
        {
            "comments": "Consumption Plan for the function app - is scaled on demand by the platform",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2015-04-01",
            "name": "[Parameters('functionAppServicePlanName')]",
            "location": "North Europe",
            "properties": {
                "name": "[Parameters('functionAppServicePlanName')]",
                "computeMode": "Dynamic",
                "sku": "Dynamic"
            }
        },
        {
            "comments": "Storage Account for the function app",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[Parameters('functionAppStorageAccountName')]",
            "apiVersion": "2016-01-01",
            "kind": "Storage",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Free"
            },
            "properties": { }
        },
        {
            "comments": "The function App for sending blobs to Emotion API and store the result",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[parameters('functionAppName')]",
            "apiVersion": "2015-08-01",
            "location": "North Europe",
            "properties": {
                "name": "[parameters('functionAppName')]",
                "hostNames": [
                    "[concat(parameters('functionAppName'),'.azurewebsites.net')]"
                ],
                "enabledHostNames": [
                    "[concat(parameters('functionAppName'),'.azurewebsites.net')]",
                    "[concat(parameters('functionAppName'),'.scm.azurewebsites.net')]"
                ],
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('functionAppName'),'.azurewebsites.net')]",
                        "sslState": 0,
                        "thumbprint": null,
                        "ipBasedSslState": 0
                    },
                    {
                        "name": "[concat(parameters('functionAppName'),'.scm.azurewebsites.net')]",
                        "sslState": 0,
                        "thumbprint": null,
                        "ipBasedSslState": 0
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('functionAppServicePlanName'))]",
                "siteConfig": {
                    "comments": "alwaysOn requires Standard Tier App Service Plan",
                    "alwaysOn": false,
                    "appSettings": [
                        { "name": "FUNCTIONS_EXTENSION_VERSION", "value": "~1" },
                        { "name": "Project", "value": "src/EmoApi/AzureFunctions/" },
                        { "name": "AzureWebJobsStorage", "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('functionAppStorageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('functionAppStorageAccountName')), '2015-05-01-preview').key1,';')]" },
                        { "name": "AzureWebJobsDashboard", "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('functionAppStorageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('functionAppStorageAccountName')), '2015-05-01-preview').key1,';')]" },
                        { "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING", "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('functionAppStorageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('functionAppStorageAccountName')), '2015-05-01-preview').key1,';')]" },
                        { "name": "WEBSITE_CONTENTSHARE", "value": "[toLower(parameters('functionAppName'))]" },
                        { "name": "storageAccountConnectionString", "Value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('blobStorageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('blobStorageAccountName')), '2015-05-01-preview').key1,';')]"},
                        { "name": "storageAccountContainerUri", "value": "[concat('https://',parameters('blobStorageAccountName'),'.blob.core.windows.net/',parameters('blobStorageContainerName'))]" },
                        { "name": "emotionApiKey", "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('emotionApiName')), '2016-02-01-preview').key1]", "dependsOn": "[resourceId('Microsoft.Web/sites/sourcecontrols', parameters('functionAppName'), 'web')]" },
                        { "name": "faceApiKey", "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('faceApiName')), '2016-02-01-preview').key1]", "dependsOn": "[resourceId('Microsoft.Web/sites/sourcecontrols', parameters('functionAppName'), 'web')]" },
                        { "name": "highscoreApiPostEmotionsUri", "value": "[parameters('highscoreApiPostEmotionsUri')]" },
                        { "name": "userApiBaseUrl", "value": "[parameters('userApiBaseUrl')]" },
                        { "name": "userApiKey", "value": "[parameters('userApiKey')]" }
                    ]
                    // "cors": {
                    //     "allowedOrigins": [
                    //         "*"
                    //     ]
                    // }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('functionAppStorageAccountName'))]",
                "[resourceId('Microsoft.Web/serverfarms', parameters('functionAppServicePlanName'))]"
            ],
            "resources": [
                {
                    "apiVersion": "2015-08-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites/', parameters('functionAppName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[parameters('functionAppSourceCodeRepositoryURL')]",
                        "branch": "[parameters('functionAppSourceCodeBranch')]",
                        "IsManualIntegration": "[parameters('functionAppSourceCodeManualIntegration')]"
                    }
                }
            ]
        }
    ],
  "outputs": {  }
}
